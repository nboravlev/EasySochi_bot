secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  postgres_db:
    file: ./secrets/postgres_db.txt
  bot_token:
    file: ./secrets/bot_token.txt
  mapbox_token:
    file: ./secrets/mapbox_token.txt

services:
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: postgres_db
    restart: always
    env_file: .env
    # Add command to use custom config
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      PGPORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tg_app_net
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p ${POSTGRES_PORT:-5432} -U $(cat /run/secrets/postgres_user) -d $(cat /run/secrets/postgres_db)"]
      interval: 25s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: tg_bot
    restart: unless-stopped
    env_file: .env
    environment:
      - LOG_LEVEL=INFO
      - LOG_DIR=/app/logs
      - ENABLE_LOG_VIEWER=true
      - PYTHONPATH=/bot
    volumes:
        - ./bot:/bot
        - bot_logs:/app/logs  # Mount logs volume
    depends_on:
      db:
        condition: service_healthy
    networks:
      - tg_app_net
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
      - bot_token
      - mapbox_token
    entrypoint: ["/bot/entrypoint.sh"]
    command: ["bot"]
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  log-viewer:
    build: 
      context: ./log_viewer
      dockerfile: Dockerfile
    container_name: log_viewer
    depends_on:
      - bot
    volumes:
      - bot_logs:/app/logs:ro  # Read-only access to logs
    ports:
      - "8080:8080"
    environment:
      - LOG_DIR=/app/logs
    networks:
      - tg_app_net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
  bot_logs:

networks:
  tg_app_net:
    driver: bridge
