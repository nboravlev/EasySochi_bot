"""chanche role keeping and put unique on tg_user_id

Revision ID: c37422f75e21
Revises: ff9ba0551487
Create Date: 2025-08-26 19:15:31.826725

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c37422f75e21'
down_revision: Union[str, Sequence[str], None] = 'ff9ba0551487'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.create_unique_constraint(
    "uq_users_tg_user_id",
    "users",
    ["tg_user_id"],
    schema="public"
    )
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('booking_chat', sa.Column('sender_tg_id', sa.BIGINT(), nullable=False))
    op.drop_constraint(op.f('booking_chat_sender_id_fkey'), 'booking_chat', type_='foreignkey')
    op.drop_constraint(op.f('booking_chat_booking_id_fkey'), 'booking_chat', type_='foreignkey')
    op.create_foreign_key(None, 'booking_chat', 'bookings', ['booking_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'booking_chat', 'users', ['sender_tg_id'], ['tg_user_id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_column('booking_chat', 'sender_id')
    op.add_column('bookings', sa.Column('tg_user_id', sa.BIGINT(), nullable=False))
    op.drop_constraint(op.f('bookings_status_id_fkey'), 'bookings', type_='foreignkey')
    op.drop_constraint(op.f('bookings_apartment_id_fkey'), 'bookings', type_='foreignkey')
    op.drop_constraint(op.f('bookings_user_id_fkey'), 'bookings', type_='foreignkey')
    op.create_foreign_key(None, 'bookings', 'users', ['tg_user_id'], ['tg_user_id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'bookings', 'booking_types', ['status_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'bookings', 'apartments', ['apartment_id'], ['id'], source_schema='public', referent_schema='apartments', ondelete='CASCADE')
    op.drop_column('bookings', 'user_id')
    op.add_column('search_sessions', sa.Column('tg_user_id', sa.BIGINT(), nullable=False))
    op.drop_constraint(op.f('search_sessions_user_id_fkey'), 'search_sessions', type_='foreignkey')
    op.drop_constraint(op.f('search_sessions_session_id_fkey'), 'search_sessions', type_='foreignkey')
    op.create_foreign_key(None, 'search_sessions', 'sessions', ['session_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'search_sessions', 'users', ['tg_user_id'], ['tg_user_id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_column('search_sessions', 'user_id')
    op.add_column('sessions', sa.Column('tg_user_id', sa.BIGINT(), nullable=False))
    op.add_column('sessions', sa.Column('role_id', sa.Integer(), server_default=sa.text('1'), nullable=False))
    op.drop_constraint(op.f('sessions_user_id_fkey'), 'sessions', type_='foreignkey')
    op.create_foreign_key(None, 'sessions', 'users', ['tg_user_id'], ['tg_user_id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.create_foreign_key(None, 'sessions', 'roles', ['role_id'], ['id'], source_schema='public', referent_schema='public', ondelete='SET DEFAULT')
    op.drop_column('sessions', 'last_interaction')
    op.drop_column('sessions', 'user_id')
    op.drop_column('sessions', 'tg_bot_id')
    op.alter_column('users', 'tg_user_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.drop_constraint(op.f('uq_name_role'), 'users', type_='unique')
    op.drop_constraint(op.f('uq_phone_role'), 'users', type_='unique')
    op.drop_constraint(op.f('uq_tg_user_role'), 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['tg_user_id'], schema='public')
    op.drop_constraint(op.f('users_role_id_fkey'), 'users', type_='foreignkey')
    op.drop_column('users', 'role_id')
    op.add_column('apartments', sa.Column('owner_tg_id', sa.BIGINT(), nullable=False), schema='apartments')
    op.drop_constraint(op.f('apartments_owner_id_fkey'), 'apartments', schema='apartments', type_='foreignkey')
    op.create_foreign_key(None, 'apartments', 'users', ['owner_tg_id'], ['tg_user_id'], source_schema='apartments', referent_schema='public', ondelete='CASCADE')
    op.drop_column('apartments', 'owner_id', schema='apartments')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('apartments', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False), schema='apartments')
    op.drop_constraint(None, 'apartments', schema='apartments', type_='foreignkey')
    op.create_foreign_key(op.f('apartments_owner_id_fkey'), 'apartments', 'users', ['owner_id'], ['id'], source_schema='apartments', ondelete='CASCADE')
    op.drop_column('apartments', 'owner_tg_id', schema='apartments')
    op.add_column('users', sa.Column('role_id', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('users_role_id_fkey'), 'users', 'roles', ['role_id'], ['id'], ondelete='SET DEFAULT')
    op.drop_constraint(None, 'users', schema='public', type_='unique')
    op.create_unique_constraint(op.f('uq_tg_user_role'), 'users', ['tg_user_id', 'role_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('uq_phone_role'), 'users', ['phone_number', 'role_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('uq_name_role'), 'users', ['username', 'role_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'tg_user_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.add_column('sessions', sa.Column('tg_bot_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('sessions', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('sessions', sa.Column('last_interaction', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'sessions', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'sessions', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('sessions_user_id_fkey'), 'sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('sessions', 'role_id')
    op.drop_column('sessions', 'tg_user_id')
    op.add_column('search_sessions', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'search_sessions', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'search_sessions', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('search_sessions_session_id_fkey'), 'search_sessions', 'sessions', ['session_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('search_sessions_user_id_fkey'), 'search_sessions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('search_sessions', 'tg_user_id')
    op.add_column('bookings', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'bookings', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'bookings', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'bookings', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('bookings_user_id_fkey'), 'bookings', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('bookings_apartment_id_fkey'), 'bookings', 'apartments', ['apartment_id'], ['id'], referent_schema='apartments', ondelete='CASCADE')
    op.create_foreign_key(op.f('bookings_status_id_fkey'), 'bookings', 'booking_types', ['status_id'], ['id'], ondelete='CASCADE')
    op.drop_column('bookings', 'tg_user_id')
    op.add_column('booking_chat', sa.Column('sender_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'booking_chat', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'booking_chat', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('booking_chat_booking_id_fkey'), 'booking_chat', 'bookings', ['booking_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('booking_chat_sender_id_fkey'), 'booking_chat', 'users', ['sender_id'], ['id'], ondelete='CASCADE')
    op.drop_column('booking_chat', 'sender_tg_id')
    # ### end Alembic commands ###
