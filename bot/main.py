from handlers.RegistrationHandler import registration_conversation
from handlers.AddObjectHandler import add_object_conv
from handlers.ObjectCommitHandler import confirm_apartment_handler
from handlers.ObjectRedoHandler import redo_apartment_handler
from handlers.SearchParamsCollectionHandler import search_conv
from handlers.CommitDeclineCancelBookingHandler import conv_commit_decline_cancel
from handlers.BookingChatHandler import booking_chat
from handlers.UserSendProblemHandler import problem_handler
from handlers.AdminReplayUserProblemHandler import admin_replay_handler
#from handlers.UnknownComandHandler import unknown_command_handler
from handlers.GlobalCommands import cancel_command
from handlers.BookingChatConversation import exit_booking_chat
from handlers.ShowInfoHandler import info_callback_handler, info_command


from db_monitor import check_db
from booking_expired_monitor import check_expired_booking
from booking_complit_monitor import check_complit_booking
from booking_placeholder_monitor import check_placeholder_booking

import os
from pathlib import Path
from datetime import time

from utils.logging_config import setup_logging, log_function_call, get_logger

import os

from telegram import (
    Update,
    ReplyKeyboardMarkup,
    BotCommand,
    BotCommandScopeChat
)
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
    CallbackQueryHandler,
    ApplicationBuilder,
    JobQueue
)
# Initialize comprehensive logging
setup_logging(
    log_level=os.getenv("LOG_LEVEL", "INFO"),
    log_dir=os.getenv("LOG_DIR", "/app/logs"),
    enable_console=True,
    enable_file=True
)

logger = get_logger(__name__)

async def post_init(application: Application) -> None:
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ (—Å–∏–Ω—è—è –ø–ª–∞—à–∫–∞)
    commands = [
        BotCommand("start", "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç"),
        BotCommand("help", "‚ö†Ô∏è –ü–æ–º–æ—â—å"),
        BotCommand('info', "üìå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"),
        BotCommand("cancel", "‚õî –û—Ç–º–µ–Ω–∞")

    ]
    await application.bot.set_my_commands(commands)

        # –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á
    application.job_queue.run_repeating(
        check_expired_booking,
        interval=60 * 60,
        first=5
    )
    application.job_queue.run_repeating(
        check_db,
        interval=30 * 60,
        first=10
    )
    application.job_queue.run_daily(
        check_complit_booking,
        time(hour=1, minute=19)
    )
    application.job_queue.run_daily(
        check_placeholder_booking,
        time(hour=1, minute=9)
    )


def main():
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    if not BOT_TOKEN:
        raise ValueError("BOT_TOKEN is not set in .env")


    app = ApplicationBuilder().token(BOT_TOKEN).post_init(post_init).build()

    #–≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("info",info_command), group=0)
    app.add_handler(problem_handler, group=0)
    app.add_handler(admin_replay_handler,group=0)

    #–∞–¥–º–∏–Ω—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    app.add_handler(
        CallbackQueryHandler(info_callback_handler, pattern=r"^info_"),
        group=1
    )
    #app.add_handler(unknown_command_handler,group=0) #–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∑–Ω–∞–∫–æ–º—ã—Ö –∫–æ–º–∞–Ω–¥
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
    
    app.add_handler(registration_conversation,group=1) #–ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (users, sessions), –≤—ã–±–æ—Ä —Ä–æ–ª–∏

    app.add_handler(add_object_conv,group=1) #–ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

    app.add_handler(confirm_apartment_handler,group=1) #–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞

    app.add_handler(redo_apartment_handler,group=1) #–æ—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞

    app.add_handler(search_conv,group=1) #–ø—Ä–æ—Ü–µ—Å—Å –≤—ã–±–æ—Ä–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

    app.add_handler(conv_commit_decline_cancel,group=1) #—Å—Ü–µ–Ω–∞—Ä–∏–π, –∫–æ–≥–¥–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –∏–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ

    app.add_handler(booking_chat,group=1)   #–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —á–∞—Ç–æ–≤ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    



    





    # –ë–µ–∑ asyncio
    app.run_polling()

if __name__ == "__main__":

    main()
