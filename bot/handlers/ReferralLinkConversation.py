
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ContextTypes, ConversationHandler, CommandHandler,
    CallbackQueryHandler, MessageHandler, filters
)

from utils.referral_link import (
    check_or_create_source, 
    get_referral_stats, 
    validate_suffix,
    validate_unique_suffix,
    generate_unique_suffix
)
from utils.message_tricks import add_message_to_cleanup, cleanup_messages, send_message

from utils.logging_config import (
    structured_logger, 
    log_db_select, 
    log_db_insert, 
    log_db_update,
    log_db_delete,
    LoggingContext,
    monitor_performance
)

# –°–æ—Å—Ç–æ—è–Ω–∏—è
(CREATE_LINK, 
HANDLE_BUTTONS) = range(2)

async def start_invite(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tg_user_id = update.effective_user.id

    source = await check_or_create_source(tg_user_id)
    print(f"DEBUG_REFERRAL_LINK:{source}")
    if source:  # —É–∂–µ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞
        stats = await get_referral_stats(source.id)
        msg = (
            f"üí∞ –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
            f"https://t.me/{context.bot.username}?start={source.suffix}\n\n"
            f"üë• <u>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ: {stats['registrations']}</u>\n\n"
            f"üè° –í–∞—à–∏ –≥–æ—Å—Ç–∏ –¥–æ–±–∞–≤–∏–ª–∏ –æ–±—ä–µ–∫—Ç–æ–≤: <b>{stats['apartments']}</b>\n"
            f"üìÖ –°–æ–≤–µ—Ä—à–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: <b>{stats['appts_bookings']}</b>\n"
            f"üí≥ –ù–∞ —Å—É–º–º—É: <b>{stats['appts_amount']}</b> ‚ÇΩ\n"
            f"üèÜ –í–∞—à–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: <b>{stats['appts_reward']}</b> ‚ÇΩ\n\n"
            f"üè° –í–∞—à–∏ –≥–æ—Å—Ç–∏ —Å–æ–≤–µ—Ä—à–∏–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: <b>{stats['renter_bookings']}</b>\n"
            f"üí≥ –ù–∞ —Å—É–º–º—É: <b>{stats['renter_amount']}</b> ‚ÇΩ\n"
            f"üèÜ –í–∞—à–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: <b>{stats['appts_reward']}</b> ‚ÇΩ"
        )
        msg = await send_message(update, msg, parse_mode = "HTML")
        await add_message_to_cleanup(context,msg.chat_id,msg.message_id)
        return ConversationHandler.END

    # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª–æ–≤–∏—è
    text = (
        "üìú –£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ:\n"
        "1. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É;\n"
        "2. –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç–µ —Å—Å—ã–ª–∫—É –ª—é–±—ã–º –∑–∞–∫–æ–Ω–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º;\n"
        "3. –ó–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ:\n"
        " - 1,5% –æ—Ç —Å—É–º–º—ã —Å–¥–µ–ª–∫–∏ –∑–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä–æ–º;\n"
        " - 1,5% –æ—Ç —Å—É–º–º—ã —Å–¥–µ–ª–∫–∏ –∑–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –ê—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª–µ–º;\n"
        "4. –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Ä—Ç—É 30 —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞ –∑–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –Ω–µ –ø–æ–∑–¥–Ω–µ–µ 24 —á–∏—Å–ª–∞ —ç—Ç–æ–≥–æ –º–µ—Å—è—Ü–∞ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ;\n"
        "5. –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–ø—Ä–∞–≤–µ –∏–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è;\n"
        "6. –í —Å–ª—É—á–∞–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π –≤–∞–º –±—É–¥–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n"
        "7. –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É <b>–ü—Ä–∏–Ω—è—Ç—å</b> –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n"
        "üëë<b>–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?</b>üëë"
    )
    keyboard = [
        [InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data="accept_terms"),
        InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="decline_terms")]
    ]
    msg = await send_message(update, text, reply_markup=InlineKeyboardMarkup(keyboard),parse_mode='HTML')
    await add_message_to_cleanup(context,msg.chat_id,msg.message_id)
    return CREATE_LINK

async def handle_terms(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    print(f"DEBUG_REFFERAL_COND: {query.data}")
    if query.data == "decline_terms":
        await query.edit_message_text("üö´ –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ.")
        return ConversationHandler.END
    
    tg_user_id = update.effective_user.id
    with LoggingContext("registration_name_step", user_id=tg_user_id) as log_ctx:
        try:
            suffix = await generate_unique_suffix(tg_user_id, update.effective_user.username, update.effective_user.first_name)
             
            structured_logger.info(
                "Suffix creation",
                user_id=tg_user_id,
                action="suffix creation",
                context={
                    'name_length': len(suffix),
                    'suffix': suffix[:50]
                }
            )
        except Exception as e:
            structured_logger.error(
                f"Error in handle_suffix_request: {str(e)}",
                user_id=tg_user_id,
                action="referral_link_error",
                exception=e
            )
            await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—É—Ñ—Ñ–∏–∫—Å–∞.")
            return CREATE_LINK


    source = await check_or_create_source(tg_user_id, suffix)

    # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await query.edit_message_reply_markup(reply_markup=None)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ç–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    link = f"https://t.me/{context.bot.username}?start={source.suffix}"

    context.user_data["link"] = link

    msg_text = (
        f"‚úÖ –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
        f"{link}"
    )
    keyboard = [
        [InlineKeyboardButton("–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", callback_data="copy_link"),
         InlineKeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_menu")]
    ]
    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º query.message.chat_id
    await context.bot.send_message(
        chat_id=query.message.chat_id,
        text=msg_text,
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    return HANDLE_BUTTONS

async def handle_link_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query

    if query.data == "copy_link":
        # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –∞–ª–µ—Ä—Ç–µ
        await query.answer(
            text=f"{context.user_data.get('link')}",
            show_alert=True
        )
    elif query.data == "back_menu":
        await query.answer()  # —É–±–∏—Ä–∞–µ–º –∫—Ä—É—Ç–∏–ª–∫—É
            # –≠—Ç–æ —É–¥–∞–ª–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥ –∏—Å—Ö–æ–¥–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        await query.edit_message_reply_markup(reply_markup=None)
        await cleanup_messages(context)
        return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω–∞"""
    await cleanup_messages(context)
    context.user_data.clear()
    await update.message.reply_text("‚ùå –û—Ç–º–µ–Ω–∞. –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –ø–æ–∑–¥–Ω–µ–µ",reply_markup=ReplyKeyboardRemove())

    return ConversationHandler.END
