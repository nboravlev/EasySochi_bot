from db.db_async import get_async_session
from db.models.apartments import Apartment

from telegram.ext import ContextTypes,CallbackQueryHandler, ConversationHandler
from sqlalchemy import select, delete, update as sa_update
from telegram import Update

from datetime import datetime

from utils.logging_config import structured_logger



async def redo_apartment_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    apartment_id = int(update.callback_query.data.split("_")[-1])
    try:
        async with get_async_session() as session:
            await session.execute(
                sa_update(Apartment)
                .where(Apartment.id == apartment_id)
                .values(
                    is_draft=True,
                    is_active=False,  # –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–∫—Ä—ã–≤–∞—Ç—å –∏–∑ –ø–æ–∏—Å–∫–∞
                    deleted_by=update.effective_user.id,  # –ö—Ç–æ —É–¥–∞–ª–∏–ª (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç)
                    updated_at=datetime.utcnow()  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ)
                )
            )
            structured_logger.info(
                "Reject new object",
                action="Reject new object",
                context={
                    'object_id':apartment_id
                }
            )

        await update.callback_query.edit_message_text("üö´ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ /add_object")
    
    except Exception as e:

        structured_logger.error(
            f"Critical error in redo new object: {str(e)}",
            action="Redo new object",
            exception=e,
            context={
                'object_id': apartment_id,
                'error_type': type(e).__name__
            }
        )
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )
    return ConversationHandler.END    


redo_apartment_handler = CallbackQueryHandler(
    redo_apartment_callback,
    pattern=r"^redo_apartment_\d+$"
)