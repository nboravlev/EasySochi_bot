from db.db_async import get_async_session
from db.models.apartments import Apartment

from telegram.ext import ContextTypes,CallbackQueryHandler

from sqlalchemy import select, delete, update as sa_update

from telegram import Update

from datetime import datetime


async def redo_apartment_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    apartment_id = int(update.callback_query.data.split("_")[-1])
    async with get_async_session() as session:
        await session.execute(
            sa_update(Apartment)
            .where(Apartment.id == apartment_id)
            .values(
                is_draft=True,
                is_active=False,  # –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–∫—Ä—ã–≤–∞—Ç—å –∏–∑ –ø–æ–∏—Å–∫–∞
                deleted_by=update.effective_user.id,  # –ö—Ç–æ —É–¥–∞–ª–∏–ª (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç)
                updated_at=datetime.utcnow()  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ)
            )
        )

    await update.callback_query.edit_message_text("üö´ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ /add_object")
    
    #return ADDRESS_INPUT

redo_apartment_handler = CallbackQueryHandler(
    redo_apartment_callback,
    pattern=r"^redo_apartment_\d+$"
)