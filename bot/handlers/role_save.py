from telegram import Update, ReplyKeyboardRemove
from telegram.ext import ContextTypes, MessageHandler, filters

from bot.handlers.user_session import register_user_and_session
from bot.handlers.phone_request import ask_phone_number
from bot.handlers.location_request import ask_location

ROLE_MAPPING = {
    "üè† –•–æ—á—É –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∂–∏–ª—å—ë": 1,
    "üèò –•–æ—á—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–±—ä–µ–∫—Ç": 2
}

async def handle_role_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    
    user_choice = update.message.text
    role_id = ROLE_MAPPING.get(user_choice)
    
    tg_user = update.effective_user
    bot_id = context.bot.id
    

    if role_id is None:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.")
        return
    
    context.user_data["role_id"] = role_id
    print(f"–≤—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: {role_id}")
    user, new_session, is_new_user = await register_user_and_session(tg_user, bot_id, role_id)

    context.user_data["is_new_user"] = is_new_user
    

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º session_id, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    context.user_data["session_id"] = new_session.id
    print(f"session_id: {new_session.id}")

    if not user.phone_number:
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–æ–ª—å.",
                                        reply_markup=ReplyKeyboardRemove())
        await ask_phone_number(update, context)
    else:
        await update.message.reply_text("–í–∞—à –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ.",
                                        reply_markup=ReplyKeyboardRemove())
        await ask_location(update, context)

# –•–µ–Ω–¥–ª–µ—Ä (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º)
role_handler = MessageHandler(filters.TEXT & filters.Regex("^(üè† –•–æ—á—É –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∂–∏–ª—å—ë|üèò –•–æ—á—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–±—ä–µ–∫—Ç)$"), handle_role_selection)
