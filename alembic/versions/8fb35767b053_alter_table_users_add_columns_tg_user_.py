"""alter table users add columns tg_user_id is_active

Revision ID: 8fb35767b053
Revises: a5b9ccdbd9fe
Create Date: 2025-07-18 09:53:08.426901

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8fb35767b053'
down_revision: Union[str, Sequence[str], None] = 'a5b9ccdbd9fe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('tg_user_id', sa.BIGINT(), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False))
    op.create_unique_constraint(None, 'users', ['tg_user_id'], schema='public')
    op.drop_constraint(op.f('users_role_id_fkey'), 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'], source_schema='public', referent_schema='public', ondelete='SET DEFAULT')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('users_role_id_fkey'), 'users', 'roles', ['role_id'], ['id'], ondelete='SET DEFAULT')
    op.drop_constraint(None, 'users', schema='public', type_='unique')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'tg_user_id')
    # ### end Alembic commands ###
