"""create session table

Revision ID: 5d7e7dee3d96
Revises: 8fb35767b053
Create Date: 2025-07-18 11:14:24.072180

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2
from geoalchemy2 import Geometry


# revision identifiers, used by Alembic.
revision: str = '5d7e7dee3d96'
down_revision: Union[str, Sequence[str], None] = '8fb35767b053'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_bot_id', sa.BIGINT(), nullable=True),
    sa.Column('tg_user_id', sa.BIGINT(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('last_interaction', sa.DateTime(), nullable=True),
    sa.Column('last_action', sa.Text(), nullable=True),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['tg_user_id'], ['public.users.tg_user_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    #op.create_index('idx_sessions_location', 'sessions', ['location'], unique=False, schema='public', postgresql_using='gist')
    op.drop_constraint(op.f('users_role_id_fkey'), 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'], source_schema='public', referent_schema='public', ondelete='SET DEFAULT')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('users_role_id_fkey'), 'users', 'roles', ['role_id'], ['id'], ondelete='SET DEFAULT')
    op.drop_index('idx_sessions_location', table_name='sessions', schema='public', postgresql_using='gist')
    op.drop_table('sessions', schema='public')
    # ### end Alembic commands ###
